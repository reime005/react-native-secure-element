name: Android

on: [push, pull_request]

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout project
      uses: actions/checkout@v1

    - name: Specify node version
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Use specific Java version for sdkmanager to work
      uses: joschi/setup-jdk@v1
      with:
        java-version: 'openjdk8'
        architecture: 'x64'

    - name: Download Android Emulator Image
      run: |
        echo y | sudo $ANDROID_HOME/tools/bin/sdkmanager --verbose "system-images;android-27;google_apis;x86"
        $ANDROID_HOME/tools/bin/avdmanager create avd -n emu -k "system-images;android-27;google_apis;x86" -b "x86" -c 1G -d 7 -f

    - name: Install node_modules & Deploy
      working-directory: ./examples/RNSecureElementTester
      env:
        BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
        BINTRAY_APIKEY: ${{ secrets.BINTRAY_APIKEY }}
      run: |
        yarn install --frozen-lockfile
        rm -rf node_modules/react-native-secure-element/examples
        yarn detox build -c android.release

    - name: Android test
      timeout-minutes: 10
      working-directory: ./examples/RNSecureElementTester
      continue-on-error: true
      run: |
        mkdir -p artifacts
        export PATH=$PATH:$ANDROID_HOME/platform-tools
        $ANDROID_HOME/emulator/emulator @emu &
        adb wait-for-device; adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'; adb shell wm dismiss-keyguard
        adb shell locksettings set-pin 1111
        yarn detox test -c android.release

    - name: Provide videos of failed E2E tests
      uses: actions/upload-artifact@master
      continue-on-error: true
      with:
        name: android-failing-e2e-videos
        path: ./examples/RNSecureElementTester/artifacts/

    - name: Release new SecureElement version to maven
      working-directory: ./android/
      if: "github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, 'release-android')"
      env:
        BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
        BINTRAY_APIKEY: ${{ secrets.BINTRAY_APIKEY }}
      run:
        sh ./release.sh

    - name: Release
      if: github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: ||
        yarn install --frozen-lockfile
        npx semantic-release
